require 'spec_helper'

describe Mallow::Core do


  describe '#fluff' do
    before { @mallow = Mallow.fluff {|m| m.a(String).to(&:upcase) } }
    it 'maps #fluff1 over its arguments' do
      data = %w{ me i like a good american made hot dog time to time }
      @mallow.fluff(data).should == data.map(&:upcase)
    end
  end

  describe '#fluff1' do
    context 'with rules' do
      before do
        @fluffer = Mallow::Core.build do |match|
          match.an(Array).to {1}
          match.a(Hash).to {2}
        end
      end
      it "executes the fluffer's rules on its argument until one matches" do
        @fluffer.fluff1([1]).should == 1
        @fluffer.fluff1({a:1}).should == 2
      end
      it "raises an exception if no rule matches" do
        expect { @fluffer.fluff1(1) }.to raise_error Mallow::DeserializationException
      end
    end
  end

  describe '::build' do
    it 'returns a new Mallow::Fluffer with rules generated by Mallow::Rule::Builder' do
      Mallow::DSL.should_receive(:build).and_return []
      Mallow::Core.build.should be_an_instance_of Mallow::Core
    end
  end

end

